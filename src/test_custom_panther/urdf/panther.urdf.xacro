<?xml version="1.0" encoding="utf-8"?>
<robot name="panther" xmlns:xacro="http://wiki.ros.org/xacro">

  <xacro:arg name="panther_version" default="1.0" />
  <xacro:arg name="use_sim" default="false" />
  <xacro:arg name="use_gpu" default="false" />
  <xacro:arg name="imu_pos_x" default="0.169" />
  <xacro:arg name="imu_pos_y" default="0.025" />
  <xacro:arg name="imu_pos_z" default="0.092" />
  <xacro:arg name="imu_rot_r" default="0.0" />
  <xacro:arg name="imu_rot_p" default="0.0" />
  <xacro:arg name="imu_rot_y" default="-1.57" />
  <xacro:arg name="simulation_engine" default="ignition-gazebo" />
  <xacro:arg name="wheel_config_file"
    default="$(find panther_description)/config/WH01.yaml" />
  <xacro:arg name="controller_config_file"
    default="$(find panther_controller)/config/WH01_controller.yaml" />
  <xacro:arg name="battery_config_file"
    default="$(find panther_description)/config/battery_ign_plugin.yaml" />
  <xacro:arg name="namespace" default="" />

  <!-- default code for getting panther in the gazebo env -->
  <xacro:include filename="$(find panther_description)/urdf/panther_macro.urdf.xacro" ns="husarion" />
  <xacro:husarion.panther_robot
    panther_version="$(arg panther_version)"
    use_sim="$(arg use_sim)"
    imu_pos_x="$(arg imu_pos_x)"
    imu_pos_y="$(arg imu_pos_y)"
    imu_pos_z="$(arg imu_pos_z)"
    imu_rot_r="$(arg imu_rot_r)"
    imu_rot_p="$(arg imu_rot_p)"
    imu_rot_y="$(arg imu_rot_y)"
    simulation_engine="$(arg simulation_engine)"
    wheel_config_file="$(arg wheel_config_file)"
    controller_config_file="$(arg controller_config_file)"
    battery_config_file="$(arg battery_config_file)"
    namespace="$(arg namespace)" />

  <!-- additional code for getting the Ouster-32 Lidar -->
  <!-- We need define the parent link to which the lidar is going to be attached -->
  <xacro:include filename="$(find test_custom_panther)/urdf/ouster_os1_32.urdf.xacro" ns="lidar" />
  <xacro:lidar.ouster_os1_32
    parent_link="cover_link"
    xyz="0.0 0.0 0.0"
    rpy="0.0 0.0 0.0"
    use_gpu="true"
    simulation_engine="$(arg simulation_engine)" />

  <!-- Add markers to the robot -->
  <link name="marker1_link">
    <visual name="visual">
      <geometry>
        <box size="0.05 0.05 0.05" />
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
  </link>

  <joint name="marker1_joint" type="fixed">
    <parent link="cover_link"/>
    <child link="marker1_link"/>
    <origin xyz="0.15 0.2 0" rpy="0 0 0"/>
  </joint>

  <link name="marker2_link">
    <visual name="visual">
        <geometry>
        <box size="0.05 0.05 0.05" />
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
  </link>

  <joint name="marker2_joint" type="fixed">
    <parent link="cover_link"/>
    <child link="marker2_link"/>
    <origin xyz="0.15 -0.2 0" rpy="0 0 0"/>
  </joint>

  <link name="marker3_link">
    <visual name="visual">
      <geometry>
        <box size="0.05 0.05 0.05" />
      </geometry>
      <material name="Pink">
        <color rgba="1.0 0.0 1.0 1.0"/>
      </material>
    </visual>
  </link>

  <joint name="marker3_joint" type="fixed">
    <parent link="cover_link"/>
    <child link="marker3_link"/>
    <origin xyz="-0.15 0.2 0" rpy="0 0 0"/>
  </joint>

  <!-- <link name="marker4_link">
    <visual name="visual">
      <geometry>
        <box>
          <size>0.05 0.05 0.001</size>
        </box>
      </geometry>
      <material>
        <ambient>0 0 1 1</ambient> 
        <diffuse>0 0 1 1</diffuse>
        <specular>0 0 1 1</specular>
      </material>
    </visual>
  </link> -->

  <!-- <joint name="marker4_joint" type="fixed">
    <parent link="cover_link"/>
    <child link="marker4_link"/>
    <origin xyz="3.78 15.08 0.33" rpy="0 0 0"/>
  </joint>

   -->
</robot>
